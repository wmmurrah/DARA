format = c("11F8.0", "1F5.2", "1F1.0"),
header = FALSE)
freshep <- read.fortran(file = "ch7freshep.txt",
format = c("11F8.0", "1F5.2"),
header = FALSE)
dput(what = "character")
dput(scan(what = "character"))
ch7ex1<- read.text("ch7ex1.dat", header = FALSE)
ch7ex1<- read.table("ch7ex1.dat", header = FALSE)
View(ch7ex1)
names(ch7ex1) <- c("id", "private", "prestige", "index1", "graduate", "growrate")
View(ch7ex1)
mod1 <- lmer(graduate ~ growrate + (growrate | id), data = ch7ex1)
screenreg(mod1)
mod1 <- lmer(graduate ~ growrate + (growrate | id), data = ch7ex1, REML = FALSE)
screenreg(mod1)
system("mplus ch7_gradrate_vertical_M1.inp")
summary(mmod1)
summary(mod1)
xyplot(graduate ~ growrate | id, ch7ex1)
library(lattice)
xyplot(graduate ~ growrate | id, ch7ex1)
xyplot(graduate ~ growrate | id, ch7ex1, type = "l")
xyplot(graduate ~ growrate , ch7ex1, group =id, type = "l")
xyplot(graduate ~ growrate , ch7ex1, group =id, type = "l", col = "black")
xyplot(graduate ~ growrate , ch7ex1, group =id, type = "b", col = "black")
View(ch7ex1)
abline(reg=mod1, col="red")
xyplot(graduate ~ growrate , ch7ex1, group =id, type = "b", col = "black")
abline(reg=mod1, col="red")
install.packages("knitr")
library(lme4)
lmmod <- lm(graduate ~ growrate, ch7ex1)
lmermod <- lmer(graudate ~ (1| growrate), ch7ex1)
lmermod <- lmer(graduate ~ (1| growrate), ch7ex1)
library(texreg)
screenreg(list(lmmod, lmermod))
lmermod <- lmer(graduate ~ growrate + (1| id), ch7ex1)
screenreg(lmermod)
aovmod <- aov(graduate ~ growrate, ch7ex1)
screenreg(list(aovmod, lmmod, lmermod))
screenreg(aovmod)
summary(aovmod)
aovmod <- anova(graduate ~ growrate, ch7ex1)
aovmod <- aov(graduate ~ growrate, ch7ex1)
aovmod
aovmod <- aov(graduate ~ id, ch7ex1)
aovmod
coef(aovmod)
aovmod <- aov(graduate ~ growrate, ch7ex1)
coef(aovmod)
screenreg(list(lmmod, lmermod))
xyplot(graduate ~ growrate , ch7ex1, group =id, type = "b", col = "black")
abline(reg=mod1, col="red")
library(lattice)
xyplot(graduate ~ growrate , ch7ex1, group =id, type = "b", col = "black")
abline(reg=mod1, col="red")
setwd("~/Dropbox/1_Projects/DARA/Tutorials/MultilevelModeling/HeckThomasIMMT3e-2015/ch7datasyntaxes")
library(mosaic)
mean(graduate, data = ch7ex1, groups = growrate)
sd(graduate, data = ch7ex1, groups = growrate)
mean(graduate, data = ch7ex1[ch7ex1$private==0], groups = growrate)
mean(graduate, data = ch7ex1[ch7ex1$private==0, ], groups = growrate)
sd(graduate, data = ch7ex1[ch7ex1$private==0, ], groups = growrate)
mean(graduate, data = ch7ex1[ch7ex1$private==1, ], groups = growrate)
sd(graduate, data = ch7ex1[ch7ex1$private==1, ], groups = growrate)
stargazer(ch7ex1, type = "text")
library(lme4)
library(texreg)
library(stargazer)
library(psychometric)
library(psych)
library(sjmisc)
library(lattice)
library(mosaic)
stargazer(ch7ex1, type = "text")
grad <- reat.table("ch7grad1.txt", header = FALSE)
grad <- reatd.table("ch7grad1.txt", header = FALSE)
grad <- read.table("ch7grad1.txt", header = FALSE)
View(grad)
dput(scan(which = "character"))
dput(scan(what = "character"))
names(grad) <- c("id", "grad1", "grad2", "grad3", "grad4",
"private", "prestige")
View(grad)
gradlong <- reshape(data = grad, varying = c("grad1", "grad2", "grad4", "grad4"),
idvar = "id")
gradlong <- reshape(data = grad, varying = c("grad1", "grad2", "grad4", "grad4"),
idvar = "id", direction = "long")
gradlong <- reshape(data = grad, varying = c("grad1", "grad2", "grad4", "grad4"),
idvar = "id", direction = "long", timevar = "growrate")
gradlong <- reshape(data = grad, varying = c("grad1", "grad2", "grad4", "grad4"),
v.names = "graduate",
idvar = "id", direction = "long", timevar = "growrate")
View(gradlong)
gradlong <- reshape(data = grad, varying = c("grad1", "grad2", "grad3", "grad4"),
v.names = "graduate",
idvar = "id", direction = "long", timevar = "growrate")
View(gradlong)
gradlong <- reshape(data = grad, varying = c("grad1", "grad2", "grad3", "grad4"),times = 0:3,
v.names = "graduate",
idvar = "id", direction = "long", timevar = "growrate")
View(gradlong)
?reshape
gradlong <- reshape(data = grad,
varying = c("grad1", "grad2", "grad3", "grad4"),
v.names = "graduate",
timevar = "growrate",
times = 0:3,
idvar = "id",
direction = "long")
View(gradlong)
?reshapeLong
xyplot(graduate ~ growrate , gradlong, group =id, type = "b", col = "black")
xyplot(formula = graduate ~ growrate , gradlong, group =id, type = "b", col = "black")
?xyplot
xyplot(graduate ~ growrate ,
data = gradlong,
group =id,
type = "b",
col = "black")
xyplot(graduate ~ growrate ,
data = gradlong,
group =id,
type = "b",
col = "black",
lty = id)
xyplot(graduate ~ growrate ,
data = gradlong,
group =id,
type = "b",
col = "black")
mod1 <- lmer(graduate ~ growrate + (growrate | id), data = gradlong, REML = FALSE)
screenreg(mod1)
mean(graduate, data = gradlong[gradlong$private==1, ], groups = growrate)
sd(graduate, data = gradlong[gradlong$private==1, ], groups = growrate)
ch7ex1 <- read.table("ch7ex1.dat", header = FALSE)
names(ch7ex1) <- c("id", "private", "prestige", "index1", "graduate", "growrate")
ch7ex1 <- ch7ex1[ ,-"index1"]
ch7ex1 <- ch7ex1[ ,!"index1"]
ch7ex1 <- ch7ex1[ ,c("index1")]
ch7ex1 <- read.table("ch7ex1.dat", header = FALSE)
names(ch7ex1) <- c("id", "private", "prestige", "index1", "graduate", "growrate")
ch7ex1 <- ch7ex1[ ,-c("index1")]
ch7ex1 <- ch7ex1[ ,-4]
View(ch7ex1)
ch7ex1 <- ch7ex1[ c(1,2,3,5,4)]
View(ch7ex1)
identical(gradlong, ch7ex1)
View(gradlong)
gradlong <- gradlong[order(gradlong$id) , ]
View(gradlong)
identical(gradlong, ch7ex1)
mod0 <- lmer(graduate ~ 1 + (1 |id), gradlong)
screenreg(mod0)
ranef(mod0)
coef(mod0)
mean(ranef(mod0))
ranef(mod0)
mean(ranef(mod0)[[1]])
coef(mod0)
summary(mod0)
varCorr(mod0)
VarCorr(mod0)
VarCorr(mod0, comp = "Variance")
print(VarCorr(mod0), comp = "Variance")
screenreg(mod0)
252.03/(252.03 + 112.75)
ICC2.lme(mod0)
ICC2.lme("graduate", "id", gradlong)
ICC2.lme(graduate, id, gradlong)
setwd("~/Dropbox/1_Projects/DARA/Tutorials/MultilevelModeling/HeckThomasIMMT3e-2015/ch7datasyntaxes")
system("mplus ch7_gradrate_vertical_M0.inp")
system("mplus ch7_gradrate_vertical_M0.inp")
system("mplus ch7_gradrate_vertical_M0.inp")
system("mplus ch7_gradrate_vertical_M0.inp")
screenreg(mod0)
mod0 <- lmer(graduate ~ 1 + (1 |id), gradlong, REML = FALSE)
screenreg(mod0)
252.03/(252.03 + 112.75)
mod1 <- lmer(graduate ~ growrate + (1 | id), data = gradlong, REML = FALSE)
screenreg(list(mod0, mod1))
mod1 <- lmer(graduate ~ growrate + (growrate | id), data = gradlong, REML = FALSE)
screenreg(list(mod0, mod1))
mod1 <- lmer(graduate ~ growrate + (growrate | id), data = ch7ex1, REML = FALSE)
screenreg(list(mod0, mod1))
mod1 <- lmer(graduate ~ growrate + (growrate | id), data = gradlong, REML = FALSE)
screenreg(list(mod0, mod1))
mean(gradlong$graduate)
stargazer(ch7ex1, type = "text")
mean(graduate, data = gradlong[gradlong$private==1, ], groups = growrate)
mean(graduate, data = gradlong, groups = growrate)
sd(graduate, data = gradlong, groups = growrate)
plot(mod1)
rm(list=ls())
library(lme4)
library(texreg)
library(stargazer)
library(psychometric)
library(psych)
library(sjmisc)
library(lattice)
library(mosaic)
setwd("~/Dropbox/1_Projects/DARA/Tutorials/MultilevelModeling/HeckThomasIMMT3e-2015/ch7datasyntaxes")
grad <- read.table("ch7grad1.txt", header = FALSE)
head(grad)
View(grad)
names(grad)
names(grad) <- c("id", "grad1", "grad2", "grad3", "grad4",
"private", "prestige")
View(grad)
stargazer(grad, type = "text")
View(grad)
gradlong <- reshape(data = grad,                   # Wide data frame.
varying = c("grad1", "grad2",  # Time-varying variables,
"grad3", "grad4"), #   only one here.
v.names = "graduate",          # Name for stacked variable.
timevar = "growrate",          # Name for timing variable.
times = 0:3,                   # Values for timing variable.
idvar = "id",                  # Id variable.
direction = "long")            # Indicate going to long.
gradlong
grad
grad
View(gradlong)
rownames(gradlong) <- 1:nrow(gradlong)
View(gradlong)
gradlong
gradlong <- gradlong[order(gradlong$id) , ]
View(gradlong)
gradlong
xyplot(graduate ~ growrate ,
data = gradlong,
group =id,
type = "b",
col = "black")
mean(graduate, data = gradlong, groups = growrate)
stargazer(grad, type = "text")
sd(graduate, data = gradlong, groups = growrate)
mod0 <- lmer(graduate ~ 1 + (1 |id), gradlong, REML = FALSE)
screenreg(mod0)
252.03/(252.03 + 112.75)
mod1 <- lmer(graduate ~ growrate + (growrate | id),
data = gradlong, REML = FALSE)
screenreg(list(mod0, mod1))
system("mplus ch7_gradrate_vertical_M0.inp")
mean(gradlong$graduate)
system("mplus ch7_gradrate_vertical_M1.inp")
mod2 <- lmer(graduate ~ growrate + private + prestige + (growrate | id),
data = gradlong, REML = FALSE)
screenreg(list(mod0, mod1, mod2))
system("mplus ch7_gradrate_vertical_M2.inp")
mod2 <- lmer(graduate ~ growrate*private + growrate*prestige + (growrate | id),
data = gradlong, REML = FALSE)
screenreg(list(mod0, mod1, mod2))
summary(mod2)
ctr <- function(x) scale(x, scale = FALSE)
gradlong$prestige <- ctr(gradlong$prestige)
gradlong$private <- ctr(gradlong$private)
mod2 <- lmer(graduate ~ growrate*private + growrate*prestige + growrate | id),
mod2 <- lmer(graduate ~ growrate*private + growrate*prestige + growrate | id),
mod2 <- lmer(graduate ~ growrate*private + growrate*prestige + (growrate | id),
data = gradlong, REML = FALSE)
screenreg(list(mod0, mod1, mod2))
install.packages("pls")
install.packages("MFAg")
library(sjmisc)
setwd("~/Dropbox/1_Projects/DARA/Tutorials/MultilevelModeling/HeckThomasIMMT3e-2015/ch7datasyntaxes")
curran <- read_spss("CurranLong.sav")
library(sjPlot)
view_df(curran, showFreq = TRUE)
view_df(curran, showFreq = TRUE, showPerc = T)
stargazer(curran)
rm(list=ls())
library(lme4)
library(texreg)
library(stargazer)
library(psychometric)
library(psych)
library(sjmisc)
library(sjPlot)
library(lattice)
library(mosaic)
curran <- read_spss("CurranLong.sav")
view_df(curran, showFreq = TRUE, showPerc = T)
stargazer(curran)
stargazer(curran, type = "text")
unique(curran$id)
length(unique(curran$id))
length(unique(curran$id))
1393/405
stargazer(curran, type = "text")
mod0 <- lmer(read ~ kidage6 + (kidage6 | id), curran, REML = FALSE)
screenreg(mod0)
mod0 <- lmer(read ~ poly(kidage6,2) + (kidage6 | id), curran, REML = FALSE)
screenreg(mod0)
mod0 <- lmer(read ~ poly(kidage6, 2, raw = TRUE) + (kidage6 | id), curran, REML = FALSE)
screenreg(mod0)
mod0.2  lmer(read ~ kidage6 + kidagesq + (kidage6 | id), curran, REML = FALSE)
mod0.2 <- lmer(read ~ kidage6 + kidagesq + (kidage6 | id), curran,
REML = FALSE)
screenreg(list(mod0, mod0.2))
mod0 <-   lmer(read ~ poly(kidage6, 3, raw = TRUE) + (kidage6 | id),
curran, REML = FALSE)
screenreg(mod0)
mod0 <-   lmer(read ~ poly(kidage6, 2, raw = TRUE) + (kidage6 | id),
curran, REML = FALSE)
screenreg(mod0)
mod0 <-   lmer(read ~ poly(kidage6, 2, raw = TRUE) + (kidage6 | id),
curran, REML = T)
screenreg(mod0)
mod0 <-   lmer(read ~ poly(kidage6, 2, raw = TRUE) + (1 | id),
curran, REML = FALSE)
screenreg(mod0)
mod0 <- lmer(graduate ~ 1 + (1 |id), gradlong, REML = FALSE)
screenreg(mod0)
mod1 <- lmer(graduate ~ growrate + (1 | id),
data = gradlong, REML = FALSE)
grad <- read.table("ch7grad1.txt", header = FALSE)
names(grad) <- c("id", "grad1", "grad2", "grad3", "grad4",
"private", "prestige")
gradlong <- reshape(data = grad,                   # Wide data frame.
varying = c("grad1", "grad2",  # Time-varying variables,
"grad3", "grad4"), #   only one here.
v.names = "graduate",          # Name for stacked variable.
timevar = "growrate",          # Name for timing variable.
times = 0:3,                   # Values for timing variable.
idvar = "id",                  # Id variable.
direction = "long")            # Indicate going to long.
# Rename rownames
rownames(gradlong) <- 1:nrow(gradlong)
# Reorder data frame by 'id' variable.
gradlong <- gradlong[order(gradlong$id) , ]
mod0 <- lmer(graduate ~ 1 + (1 |id), gradlong, REML = FALSE)
screenreg(mod0)
mod1 <- lmer(graduate ~ growrate + (1 | id),
data = gradlong, REML = FALSE)
screenreg(list(mod0, mod1))
mod1 <- lmer(graduate ~ growrate + (growrate | id),
data = gradlong, REML = FALSE)
screenreg(list(mod0, mod1))
252.03/(252.03 + 112.75)
setwd("~/Dropbox/1_Projects/DARA/Tutorials/MultilevelModeling/HeckThomasIMMT3e-2015/ch7datasyntaxes")
plot(read ~ kidage, curran)
plot(read ~ kidagetv, curran)
plot(read ~ kidagetv, curran, pch =21, col = "blue")
plot(read ~ kidagetv, curran, pch =20, col = "blue")
xyplot(read ~ kidagetv, data = curran, groups = id, col = "black")
xyplot(read ~ kidagetv, data = curran, groups = id, type = "b", col = "black")
xyplot(read ~ kidagetv,
data = curran,
groups = id,
type = "b")
xyplot(read ~ kidagetv,
data = curran,
groups = id,
type = "b",
col = "black")
xyplot(graduate ~ growrate ,
data = gradlong,
group =id,
type = "b",
col = "black")
xyplot(read ~ kidagetv,
data = curran,
groups = id,
type = "p",
col = "black")
xyplot(read ~ kidagetv,
data = curran,
groups = id,
type = "l",
col = "black")
xyplot(read ~ kidagetv,
data = curran,
groups = id,
type = "b",
col = "black")
retrodesign <- function(A, s, alpha=.05, df=Inf, n.sims=10000){
z <- qt(1-alpha/2, df)
p.hi <- 1 - pt(z-A/s, df)
p.lo <- pt(-z-A/s, df)
power <- p.hi + p.lo
typeS <- p.lo/power
estimate <- A + s*rt(n.sims,df)
significant <- abs(estimate) > s*z
exaggeration <- mean(abs(estimate)[significant])/A
return(list(power=power, typeS=typeS, exaggeration=exaggeration))
}
retrodesign(.1, 3.28)
retrodesign(2, 8.1)
?rt
retrodesign(A = 2.8, s = 1, alpha = .05)
# Producing Figures 2a and 2b for the Gelman and Carlin paper
D_range <- c(seq(0,1,.01),seq(1,10,.1),100)
n <- length(D_range)
power <- rep(NA, n)
typeS <- rep(NA, n)
exaggeration <- rep(NA, n)
for (i in 1:n){
a <- retrodesign(D_range[i], 1)
power[i] <- a$power
typeS[i] <- a$typeS
exaggeration[i] <- a$exaggeration
}
par(mar=c(3,3,0,0), mgp=c(1.7,.5,0), tck=-.01)
plot(power, typeS, type=“l”, xlim=c(0,1.05), ylim=c(0,0.54), xaxs=“i”, yaxs=“i”,
xlab=“Power”, ylab=“Type S error rate”, bty=“l”, cex.axis=.9, cex.lab=.9)
dev.off()
pdf(“pow2.pdf”, height=2.5, width=3)
par(mar=c(3,3,0,0), mgp=c(1.7,.5,0), tck=-.01)
plot(power, exaggeration, type=“l”, xlim=c(0,1.05), ylim=c(0,12), xaxs=“i”, yaxs=“i”,
xlab=“Power”, ylab=“Exaggeration ratio”, bty=“l”, yaxt=“n”, cex.axis=.9, cex.lab=.9)
axis(2, c(0,5,10))
segments(.05, 1, 1, 1, col=“gray”)
par(mar=c(3,3,0,0), mgp=c(1.7,.5,0), tck=-.01)
plot(power, typeS, type="l", xlim=c(0,1.05), ylim=c(0,0.54), xaxs="i", yaxs="i",
xlab="Power", ylab="Type S error rate", bty="l", cex.axis=.9, cex.lab=.9)
dev.off()
pdf("pow2.pdf", height=2.5, width=3)
par(mar=c(3,3,0,0), mgp=c(1.7,.5,0), tck=-.01)
plot(power, exaggeration, type="l", xlim=c(0,1.05), ylim=c(0,12), xaxs="i", yaxs="i",
xlab="Power", ylab="Exaggeration ratio", bty="l", yaxt="n", cex.axis=.9, cex.lab=.9)
axis(2, c(0,5,10))
segments(.05, 1, 1, 1, col="gray")
pdf("pow1.pdf", height=2.5, width=3)
par(mar=c(3,3,0,0), mgp=c(1.7,.5,0), tck=-.01)
plot(power, typeS, type="l", xlim=c(0,1.05), ylim=c(0,0.54), xaxs="i", yaxs="i",
xlab="Power", ylab="Type S error rate", bty="l", cex.axis=.9, cex.lab=.9)
dev.off()
pdf("pow2.pdf", height=2.5, width=3)
par(mar=c(3,3,0,0), mgp=c(1.7,.5,0), tck=-.01)
plot(power, exaggeration, type="l", xlim=c(0,1.05), ylim=c(0,12), xaxs="i", yaxs="i",
xlab="Power", ylab="Exaggeration ratio", bty="l", yaxt="n", cex.axis=.9, cex.lab=.9)
axis(2, c(0,5,10))
segments(.05, 1, 1, 1, col="gray")
dev.off()
retrodesign(.25, 1)
retrodesign(.25, 1, df = 80)
retrodesign(.1, 3.28)
# Example: true effect size of 2, standard error 8.1, alpha=0.05
retrodesign(2, 8.1)
retrodesign(.3, 3.28)
# Example: true effect size of 1, standard error 3.28, alpha=0.05
retrodesign(1, 3.28)
retrodesign(.02, .081)
install.packages("Grace")
setwd("~/Dropbox/1_Projects/DARA/Tutorials/MultilevelModeling/HeckThomasIMMT3e-2015/ch7datasyntaxes")
library(MplusAutomation)
prepareMplusData(curran, "curran.dat", inpfile = "curran")
prepareMplusData(df = curran,
filename = "curran.dat",
inpfile = "curran.inp")
screenreg(list(mod0, mod0.2))
library(lme4)
library(texreg)
library(stargazer)
library(psychometric)
library(psych)
library(sjmisc)
library(sjPlot)
library(lattice)
library(mosaic)
screenreg(list(mod0, mod0.2))
summary(mod0)
stargazer(curran, type = "text")
mod0 <-   lmer(read ~ poly(kidage6, 2, raw = TRUE) + (1 | id),
curran, REML = FALSE)
screenreg(mod0)
summary(mod0)
system("mplus curranMod0.inp")
system("mplus curranMod0.inp")
system("mplus curranMod0.inp")
system("mplus curranMod0.inp")
system("mplus curranMod0.inp")
system("mplus curranMod0.inp")
summary(mod0)
screenreg(mod0)
system("mplus curranMod0.inp")
screenreg(mod0)
system("mplus curranMod0.inp")
system("mplus curranMod0.inp")
system("mplus curranMod0.inp")
system("mplus curranMod0.inp")
screenreg(mod0)
system("mplus curranMod0.inp")
screenreg(mod0)
system("mplus curranMod0.inp")
screenreg(mod0)
summary(mod0)
view_df(curran, showFreq = TRUE, showPerc = T)
stargazer(curran, type = "text")
# How many children are in our data?
length(unique(curran$id))
xyplot(read ~ kidagetv,
data = curran,
groups = id,
type = "b",
col = "black")
1/26
a = .4; b = .18; c = .02; c = .25, e = .15
a = .4; b = .18; c = .02; c = .25; e = .15
a
b
v
c
d
e
a = .4; b = .18; c = .02; d = .25; e = .15
-log(a, 2)
-log(c, 2)
install.packages("simcausal")
