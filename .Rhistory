summary(mod)
datamat <- model.matrix(~.-1, data)
View(datamat)
dm <- model.matrix(~.-1, data)
names(dm)
colnames(dm)
View(dm)
dm <- model.matrix(~., data)
View(dm)
colnames(dm)
mod <- lm(ppvt1 ~ lottery, enrolled + school, core1)
mod <- lm(ppvt1 ~ lottery + enrolled + school, core1)
summary(mod)
ppvt     <- 138.8 + 4.5*dm$offeredOffered + 1.5*attendedAttended +
-3*dm$malemale + -9.9*dm$schoolFairview + -2.3*dm$schoolJefferson +
rnorm(n = n, mean = 0, sd = 13.64)
View(dm)
dm[ ,"offeredOffered"]
ppvt     <- 138.8 + 4.5*dm[ ,"offeredOffered"] + 1.5*dm[ ,"attendedAttended"] +
-3*dm[ ,"malemale"] + -9.9*dm[,"schoolFairview"] +
-2.3*dm[ ,"schoolJefferson"] +
rnorm(n = n, mean = 0, sd = 13.64)
mean(ppvt)
n        <- 150
lambda   <- .67
offered  <- rep(x = 0:1, times = n/2)
male     <- rep(x = 0:1, each  = n/2)
school   <- rep(x=1:3, times=n/3)
attended <- rep(x=NA, times=n)
set.seed(123)
for (i in 1:n){
if (offered[i] == 1) {
attended[i] <- sample(x = 0:1, size = 1, prob = c(1-lambda, lambda))
} else {
attended[i] <- 0
}
}
data <- data.frame(
offered = factor(offered, labels = c("Not Offered", "Offered")),
male = factor(male, labels = c("female", "male")),
school = factor(school, labels = c("Central", "Fairview", "Jefferson")),
attended = factor(attended, labels = c("Not Attended", "Attended"))
)
dm <- model.matrix(~., data)
data$ppvt     <- 138.8 + 4.5*dm[ ,"offeredOffered"] + 1.5*dm[ ,"attendedAttended"] +
-3*dm[ ,"malemale"] + -9.9*dm[,"schoolFairview"] +
-2.3*dm[ ,"schoolJefferson"] +
rnorm(n = n, mean = 0, sd = 13.64)
rm(dm)
View(data)
testmod <- lm(ppvt ~ offered + attended + male + school, data)
summary(mod)
summary(testmod)
library(AER)
ivmod <- ivreg(scale(ppvt) ~ attended + male + school | offered + male + school, data=data)
summary(ivmod)
n        <- 150
lambda   <- .67
offered  <- rep(x = 0:1, times = n/2)
male     <- rep(x = 0:1, each  = n/2)
school   <- rep(x=1:3, times=n/3)
attended <- rep(x=NA, times=n)
set.seed(123)
for (i in 1:n){
if (offered[i] == 1) {
attended[i] <- sample(x = 0:1, size = 1, prob = c(1-lambda, lambda))
} else {
attended[i] <- 0
}
}
# prop.table(table(offered, attended),1)
data <- data.frame(
offered = factor(offered, labels = c("Not Offered", "Offered")),
male = factor(male, labels = c("female", "male")),
school = factor(school, labels = c("Central", "Fairview", "Jefferson")),
attended = factor(attended, labels = c("Not Attended", "Attended"))
)
dm <- model.matrix(~., data)
data$ppvt     <- 138.8 + 4.5*dm[ ,"offeredOffered"] + 1.5*dm[ ,"attendedAttended"] +
-3*dm[ ,"malemale"] + -9.9*dm[,"schoolFairview"] +
-2.3*dm[ ,"schoolJefferson"] +
rnorm(n = n, mean = 0, sd = 13.64)
rm(list=ls())
n        <- 150
lambda   <- .67
offered  <- rep(x = 0:1, times = n/2)
male     <- rep(x = 0:1, each  = n/2)
school   <- rep(x=1:3, times=n/3)
attended <- rep(x=NA, times=n)
set.seed(123)
for (i in 1:n){
if (offered[i] == 1) {
attended[i] <- sample(x = 0:1, size = 1, prob = c(1-lambda, lambda))
} else {
attended[i] <- 0
}
}
# prop.table(table(offered, attended),1)
data <- data.frame(
offered = factor(offered, labels = c("Not Offered", "Offered")),
male = factor(male, labels = c("female", "male")),
school = factor(school, labels = c("Central", "Fairview", "Jefferson")),
attended = factor(attended, labels = c("Not Attended", "Attended"))
)
dm <- model.matrix(~., data)
data$ppvt     <- 138.8 + 4.5*dm[ ,"offeredOffered"] + 1.5*dm[ ,"attendedAttended"] +
-3*dm[ ,"malemale"] + -9.9*dm[,"schoolFairview"] +
-2.3*dm[ ,"schoolJefferson"] +
rnorm(n = n, mean = 0, sd = 13.64)
rm(list=ls(-data))
rnorm(n = n, mean = 0, sd = 13.64)
n        <- 150
lambda   <- .67
offered  <- rep(x = 0:1, times = n/2)
male     <- rep(x = 0:1, each  = n/2)
school   <- rep(x=1:3, times=n/3)
attended <- rep(x=NA, times=n)
set.seed(123)
for (i in 1:n){
if (offered[i] == 1) {
attended[i] <- sample(x = 0:1, size = 1, prob = c(1-lambda, lambda))
} else {
attended[i] <- 0
}
}
# prop.table(table(offered, attended),1)
data <- data.frame(
offered = factor(offered, labels = c("Not Offered", "Offered")),
male = factor(male, labels = c("female", "male")),
school = factor(school, labels = c("Central", "Fairview", "Jefferson")),
attended = factor(attended, labels = c("Not Attended", "Attended"))
)
dm <- model.matrix(~., data)
data$ppvt     <- 138.8 + 4.5*dm[ ,"offeredOffered"] + 1.5*dm[ ,"attendedAttended"] +
-3*dm[ ,"malemale"] + -9.9*dm[,"schoolFairview"] +
-2.3*dm[ ,"schoolJefferson"] +
rnorm(n = n, mean = 0, sd = 13.64)
rm(list=ls(!data))
rm(list=setdiff(ls(), "data")
rm(list=setdiff(ls(), "data"))
A <- c("a", "b","c")
B <- c("b","c","d")
setdiff(A, B)
setdiff(B, A)
n        <- 150
lambda   <- .67
offered  <- rep(x = 0:1, times = n/2)
male     <- rep(x = 0:1, each  = n/2)
school   <- rep(x=1:3, times=n/3)
attended <- rep(x=NA, times=n)
set.seed(123)
for (i in 1:n){
if (offered[i] == 1) {
attended[i] <- sample(x = 0:1, size = 1, prob = c(1-lambda, lambda))
} else {
attended[i] <- 0
}
}
# prop.table(table(offered, attended),1)
data <- data.frame(
offered = factor(offered, labels = c("Not Offered", "Offered")),
male = factor(male, labels = c("female", "male")),
school = factor(school, labels = c("Central", "Fairview", "Jefferson")),
attended = factor(attended, labels = c("Not Attended", "Attended"))
)
dm <- model.matrix(~., data)
data$ppvt     <- 138.8 + 4.5*dm[ ,"offeredOffered"] + 1.5*dm[ ,"attendedAttended"] +
-3*dm[ ,"malemale"] + -9.9*dm[,"schoolFairview"] +
-2.3*dm[ ,"schoolJefferson"] +
rnorm(n = n, mean = 0, sd = 13.64)
rm(list=setdiff(ls(), "data"))
A <- 1:3
B <- 2:4
setdfii(A,B)
setdiff(A, B)
setdiff(B, A)
diff(A,B)
unique(A, B)
!unique(A, B)
duplicated(A, B)
setdiff(A, B)
setdiff(B, A)
n        <- 150
lambda   <- .67
offered  <- rep(x = 0:1, times = n/2)
male     <- rep(x = 0:1, each  = n/2)
school   <- rep(x=1:3, times=n/3)
attended <- rep(x=NA, times=n)
set.seed(123)
for (i in 1:n){
if (offered[i] == 1) {
attended[i] <- sample(x = 0:1, size = 1, prob = c(1-lambda, lambda))
} else {
attended[i] <- 0
}
}
# prop.table(table(offered, attended),1)
data <- data.frame(
offered = factor(offered, labels = c("Not Offered", "Offered")),
male = factor(male, labels = c("female", "male")),
school = factor(school, labels = c("Central", "Fairview", "Jefferson")),
attended = factor(attended, labels = c("Not Attended", "Attended"))
)
dm <- model.matrix(~., data)
data$ppvt     <- 138.8 + 4.5*dm[ ,"offeredOffered"] + 1.5*dm[ ,"attendedAttended"] +
-3*dm[ ,"malemale"] + -9.9*dm[,"schoolFairview"] +
-2.3*dm[ ,"schoolJefferson"] +
rnorm(n = n, mean = 0, sd = 13.64)
ls()
length(ls())
library(haven)
wings <- read_spss("data/wings.sav")
wings <- read_spss("data/")
wings <- read_spss("data/NPSY_TOM_June_2012_C1.sav")
attr(wings$GRADE_1, which = "labels")
attr(wings$GRADE_1, which = "label")
install.packages("JGR", "Deducer", "DeducerExtras")
install.packages("JGR")
install.packages("Deducer")
install.packages("DeducerExtras")
library(Deducer)
JGR()
1 + 1
x  <- 1:25
x
x  <- 1:50
x
typeof(x)
is.vector(x)
tab_data <- data.frame(Dimension=c("1d", "2d", "nd"),
Homogeneous=c("Atomic vector", "Matrix", "Array"),
Heterogeneous=c("List", "Data frame", "")))
tab_data <- data.frame(Dimension=c("1d", "2d", "nd"),
Homogeneous=c("Atomic vector", "Matrix", "Array"),
Heterogeneous=c("List", "Data frame", ""))
View(tab_data)
ztab <- ztable(tab_data)
library("ztable", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.1")
ztab <- ztable(tab_data)
ztab
ztab <- ztable2html(ztab)
ztab <- ztable2html(ztab, tab_data)
x  <- 1
x
is.vector(x)
dput(scan(what = character))
dput(scan(what = "character"))
coerced <- c(1, TRUE, 3)
coerced <- c(1, TRUE, 3, 3.4)
y <- c(1L, TRUE, 3L)
typeof(y)
y2 <- c(1L, TRUE, 3L, 3.4)
typeof(y2)
y3 <- c(1L, TRUE, 3L, 3.4, "blue")
typeof(y3)
ls()
mat <- matrix(1:9, nrow=3)
row.mat <- matrix(1:9, nrow=3, byrow=T)
library(wakefield)
data <- data.frame(id = id(n=n),
age = age(n))
n <- 250
data <- data.frame(id = id(n=n),
age = age(n))
View(data)
data <- data.frame(id = id(n=n),
age = age(n),
gender = gender(n),
race = race(n)
)
View(data)
table(race ~ gender, data)
library(mosaic)
table(race ~ gender, data)
tally(race ~ gender, data)
data <- r_data_frame(n = 250,
id,
race,
age,
sex,
hour,
iq,
height,
died,
Scoring = rnorm,
Smoker = valid
)
View(data)
length(unique(data$Race))
table(data$Race)
library(haven)
demog <- read_spss("data/Dem_ParQuant_Summer_2013_C2.sav")
table(demog$COND_1)
attr(demog$COND_1, "labels")
attr(demog$COND_1, "label")
demog$foo <- factor(rep(0:1, nrow(demog)/2), levels=c("No", "Yes"))
attr(demog$foo, "label") <- "This is a fake variable"
str(demog$foo)
attr(demog$foo, "labels") <- levels(demog$foo)
str(demog$foo)
write_sav(demog, "data/demogMOD.sav")
table(demog$foo)
demog$foo
rep(0:1, nrow(demog)/2)
demog$foo <- factor(rep(0:1, nrow(demog)/2), labels=c("No", "Yes"))
attr(demog$foo, "label") <- "This is a fake variable"
str(demog$foo)
table(demog$foo)
View(demog)
write_sav(demog, "data/demogMOD.sav")
write_sav(demog, "data/demogMOD.sav")
stargazer::stargazer(demog)
stargazer::stargazer(demog, type = 'text')
stargazer::stargazer(demog, type = 'text')
write_sav(demog[c(1:10, 94:104,], "data/demogMOD.sav")
write_sav(demog[c(1:10, 94:104), ], "data/demogMOD.sav")
write_sav(demog, "data/demogMOD.sav")
stargazer::stargazer(demog[c(1:10, 94:104), ], type = 'text')
demog[c(1:10, 94:104)
, ]
stargazer::stargazer(demog[c(1:10, 94:104), ], type = 'text')
str(demog$COND_1)
levels(demog$cont)
levels(demog$COND_1
)
labels(demog$COND_1)
attr(demog$COND_1, "lables")
attr(demog$COND_1, "labels")
demog$COND_1 <- as_factor(demog$COND_1)
table(demog$COND_1)
View(demog)
demog$bar <- rnorm(nrow(demog))
summary(demog$bar)
hist(demog$bar)
write_sav(demog, "data/demogMOD.sav")
demog$foo <- factor(rep(0:1, nrow(demog)/2), labels=c("No", "Yes"))
attr(demog$foo, "label") <- "This is a fake factor variable"
demog$bar <- rnorm(nrow(demog))
attr(demog$bar, "label") <- "This is a fake numeric variable"
str(demog$foo)
str(demog$bar)
write_sav(demog, "data/demogMOD.sav")
mean(demog$bar)
describe(demog$bar)
psych::describe(demog$bar)
summary(demog$bar)
library(mosaic)
favstats(demog$bar)
tally(demog$foo)
table(demog$foo, useNA = 'always')
favstats(demog$bar)
stargazer::stargazer(demog$bar)
text(summary(demog$bar))
head(demog[1:10 ,290:293])
str(demog$foo)
demog <- read_spss("data/Dem_ParQuant_Summer_2013_C2.sav")
str(demog$COND_1)
demog$COND_1 <- as_factor(demog$COND_1)
demog <- read_spss("data/Dem_ParQuant_Summer_2013_C2.sav")
stargazer::stargazer(demog[c(1:10, 94:104), ], type = 'text')
stargazer::stargazer(demog[c(1:10, 94:104), ], type = 'text')
str(demog$COND_1)
stargazer::stargazer(demog[c(1:10, 94:104), ], type = 'text')
stargazer::stargazer(demog, type = 'text')
stargazer::stargazer(demog, type = 'text')
str(demog$COND_1)
table(demog$COND_1)
f
demog$COND_1 <- as_factor(demog$COND_1)
table(demog$COND_1)
attr(demog$COND_1, "label")
attr(demog$AD_ETHOTH, "label")
demog <- read_spss("data/Dem_ParQuant_Summer_2013_C2.sav")
library(sjmisc)
demog$cond <- to_label(demog$COND_1)
table(demog$cond)
attr(demog$cond, 'label')
str(demog$COHORT)
lbl <- attr(demog$COHORT, "label")
demog$COHORT <- as_factor(demog$COHORT)
attr(demog$COHORT, 'label') <- lbl
str(demog$COHORT)
write_sav((demog, "data/demogMOD.sav"))
write_sav(demog, "data/demogMOD.sav")
library(mosaic)
library(haven)
demog <- read_spss("data/Dem_ParQuant_Summer_2013_C2.sav")
str(demog$COND_1)
table(demog$COND_1)
View(demog)
attr(demog$COND_1, 'label')
attr(demog$COND_1, 'labels')
demog$COND_1 <- as_factor(demog$COND_1)
View(demog)
table(demog$COND_1)
demog$foo <- factor(rep(0:1, nrow(demog)/2), labels=c("No", "Yes"))-1
demog$foo <- factor(rep(0:1, nrow(demog)/2), labels=c("No", "Yes"))-1
demog$foo <- factor(rep(0:1, nrow(demog)/2), labels=c("No", "Yes"))
attr(demog$foo, "label") <- "This is a fake factor variable"
str(demog$foo)
demog$bar <- rnorm(nrow(demog))
attr(demog$bar, "label") <- "This is a fake numeric variable"
str(demog$bar)
hist(demog$bar)
lbl <- attr(demog$COHORT, "label")
demog$COHORT <- as_factor(demog$COHORT)
attr(demog$COHORT, 'label') <- lbl
write_sav(demog, "data/demogMOD.sav")
source("R/as_factor_lbl.R")
library(mosaic)
# Load `haven` package
library(haven)
demog <- read_spss("data/Dem_ParQuant_Summer_2013_C2.sav")
table(demog$COND_1)
as_factor()
as_factor
source('~/Dropbox/1_Projects/DARA/R/as_factor_lbl.R', echo=TRUE)
demog$COND_1 <- as_factor_lbl(demog$COND_1)
table(demog$COND_1)
demog$foo <- factor(rep(0:1, nrow(demog)/2), labels=c("No", "Yes"))
attr(demog$foo, "label") <- "This is a fake factor variable"
demog$bar <- rnorm(nrow(demog))
attr(demog$bar, "label") <- "This is a fake numeric variable"
table(demog$foo, useNA = 'always')
favstats(demog$bar)
library("mice")
library("gam")
install.packages("gam")
library("gam")
data <- matrix(sample(1:100,4*8*3,replace=TRUE),nrow=8*4,
dimnames=list(NULL,c("A","B","C")))
View(data)
data <- as.data.frame(data)
View(data)
data[c(31:32),"A"] <- NA
data[c(15:16,22:24,30:32),"B"] <- NA
data[c(6:8,12:16,17:21,27:29),"C"] <- NA
View(data)
mdpat <- cbind(expand.grid(rec = 8:1, pat = 1:4, var = 1:3), r=as.numeric(as.vector(is.na(data))))
pattern1 <- data[1:8,]
pattern2 <- data[9:16,]
pattern3 <- data[17:24,]
pattern4 <- data[25:32,]
types <-  c("Univariate","Monotone","File matching","General")
tp41 <- levelplot(r~var+rec|as.factor(pat), data=mdpat,
as.table=TRUE, aspect="iso",
shrink=c(0.9),
col.regions = mdc(1:2),
colorkey=FALSE,
scales=list(draw=FALSE),
xlab="", ylab="",
between = list(x=1,y=0),
strip = strip.custom(bg = "grey95", style = 1,
factor.levels = types))
print(tp41)
View(pattern1)
set.seed(1234)
data <- matrix(sample(1:100,4*8*3,replace=TRUE),nrow=8*4,
dimnames=list(NULL,c("A","B","C")))
data <- as.data.frame(data)
data[c(31:32),"A"] <- NA
data[c(15:16,22:24,30:32),"B"] <- NA
data[c(6:8,12:16,17:21,27:29),"C"] <- NA
mdpat <- cbind(expand.grid(rec = 8:1, pat = 1:4, var = 1:3), r=as.numeric(as.vector(is.na(data))))
pattern1 <- data[1:8,]
pattern2 <- data[9:16,]
pattern3 <- data[17:24,]
pattern4 <- data[25:32,]
### Figure 4.1
types <-  c("Univariate","Monotone","File matching","General")
tp41 <- levelplot(r~var+rec|as.factor(pat), data=mdpat,
as.table=TRUE, aspect="iso",
shrink=c(0.9),
col.regions = mdc(1:2),
colorkey=FALSE,
scales=list(draw=FALSE),
xlab="", ylab="",
between = list(x=1,y=0),
strip = strip.custom(bg = "grey95", style = 1,
factor.levels = types))
print(tp41)
View(data)
View(pattern1)
View(pattern2)
View(pattern3)
View(pattern4)
md.pattern(pattern4)
flux(pattern4)[,1:3]
5/8
6/8
6/8
5/8
data <- nhanes2[,1:3]
md.pattern(data)
imp <- mice(data, visit="monotone", maxit=1, m=2)
View(data)
ini <- mice(nhanes2, maxit=0)
pred <- ini$pred
pred["bmi","chl"] <- 0
pred["hyp",c("chl","bmi")] <- 0
imp <- mice(nhanes2, vis="monotone", pred=pred, maxit=1, m=2)
plot(imp)
imp
library(mosaic)
# Load `haven` package
library(haven)
# source custom factor function
source("R/as_factor_lbl.R")
# Read SPSS file
demog <- read_spss("data/Dem_ParQuant_Summer_2013_C2.sav")
str(demog$COND_1)
table(demog$COND_1)
